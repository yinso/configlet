// Generated by CoffeeScript 1.10.0
(function() {
  var AppError, defaultOpts, fs, jsYaml, loadSync, os, path, readFileSync, util;

  util = require('./util');

  fs = require('fs');

  path = require('path');

  os = require('os');

  jsYaml = require('js-yaml');

  AppError = require('errorlet');

  defaultOpts = {
    basePath: './config/',
    loadOrder: function() {
      return ['default', process.env.NODE_ENV || process.env.ENV || 'development', os.hostname(), 'local'];
    },
    extMap: {
      '.json': JSON.parse,
      '.yml': jsYaml.safeLoad,
      '.yaml': jsYaml.safeLoad
    }
  };

  readFileSync = function(filePath, extParserMap) {
    var data, e, error, extname, parser;
    for (extname in extParserMap) {
      parser = extParserMap[extname];
      try {
        data = fs.readFileSync(filePath + extname, 'utf8');
        return parser(data);
      } catch (error) {
        e = error;
        continue;
      }
    }
    return {};
  };

  loadSync = function(options) {
    var fileName, i, innerOptions, len, loadOrderFileNames, res;
    if (options == null) {
      options = {};
    }
    innerOptions = util.merge(defaultOpts, options);
    loadOrderFileNames = innerOptions.loadOrder();
    res = {};
    for (i = 0, len = loadOrderFileNames.length; i < len; i++) {
      fileName = loadOrderFileNames[i];
      res = util.merge(res, readFileSync(innerOptions.basePath + fileName, innerOptions.extMap));
    }
    return res;
  };

  module.exports = {
    loadSync: loadSync
  };

}).call(this);
